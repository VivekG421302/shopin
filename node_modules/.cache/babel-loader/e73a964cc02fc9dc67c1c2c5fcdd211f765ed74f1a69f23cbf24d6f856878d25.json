{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\QCC\\\\Desktop\\\\Shopin\\\\shopin\\\\src\\\\Sections\\\\ProductReview.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AdminCharts from '../Components/AdminCharts';\nimport \"../Pages/Admin.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductReview(props) {\n  _s();\n  let adminProductData = props.adminProducts;\n  const [isEditing, setIsEditing] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  function deleteData(id, productName) {\n    if (window.confirm(`Are you sure you want to delete ${productName}?`)) {\n      fetch(`http://localhost:5006/products/${id}`, {\n        method: 'DELETE'\n      }).then(resp => {\n        if (resp.ok) {\n          props.refreshProducts(); // Trigger refresh to update the list after deletion\n          alert(`${productName} has been deleted.`);\n        } else {\n          console.error('Failed to delete the product');\n        }\n      }).catch(error => console.error('Error deleting product:', error));\n    }\n  }\n  function handleEdit(product) {\n    setSelectedProduct(product);\n    setIsEditing(true); // Switch to editing mode\n  }\n  function handleUpdate(id, updatedProduct) {\n    fetch(`http://localhost:5006/products/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedProduct)\n    }).then(response => response.json()).then(() => {\n      setIsEditing(false); // Exit editing mode after update\n      props.refreshProducts(); // Refresh product list after update\n      alert('Product updated successfully!');\n    }).catch(error => {\n      console.error('Error updating product:', error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productReviewBody\",\n    children: [adminProductData.map(prod => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clickProductChart\",\n      children: /*#__PURE__*/_jsxDEV(AdminCharts, {\n        imgSrc: prod.thumbnail,\n        title: prod.name,\n        price: prod.price,\n        desc: prod.description,\n        rate: prod.rate,\n        brand: prod.brand,\n        market: prod.compare,\n        category: prod.category,\n        subCategory: prod.subCategory,\n        stock: prod.stock,\n        sales: prod.sales,\n        deleteOnClick: () => deleteData(prod.id, prod.name),\n        onEdit: () => handleEdit(prod)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)\n    }, prod.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), isEditing && /*#__PURE__*/_jsxDEV(AddProduct, {\n      selectedProduct: selectedProduct,\n      isEditing: isEditing,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductReview, \"IUVgOOJvGwxQjW4J5C4qcDDAIC0=\");\n_c = ProductReview;\nexport default ProductReview;\nvar _c;\n$RefreshReg$(_c, \"ProductReview\");","map":{"version":3,"names":["React","useState","AdminCharts","jsxDEV","_jsxDEV","ProductReview","props","_s","adminProductData","adminProducts","isEditing","setIsEditing","selectedProduct","setSelectedProduct","deleteData","id","productName","window","confirm","fetch","method","then","resp","ok","refreshProducts","alert","console","error","catch","handleEdit","product","handleUpdate","updatedProduct","headers","body","JSON","stringify","response","json","className","children","map","prod","imgSrc","thumbnail","title","name","price","desc","description","rate","brand","market","compare","category","subCategory","stock","sales","deleteOnClick","onEdit","fileName","_jsxFileName","lineNumber","columnNumber","AddProduct","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/QCC/Desktop/Shopin/shopin/src/Sections/ProductReview.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AdminCharts from '../Components/AdminCharts';\r\nimport \"../Pages/Admin.css\";\r\n\r\nfunction ProductReview(props) {\r\n    let adminProductData = props.adminProducts;\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n\r\n    function deleteData(id, productName) {\r\n        if (window.confirm(`Are you sure you want to delete ${productName}?`)) {\r\n            fetch(`http://localhost:5006/products/${id}`, {\r\n                method: 'DELETE',\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.ok) {\r\n                        props.refreshProducts(); // Trigger refresh to update the list after deletion\r\n                        alert(`${productName} has been deleted.`);\r\n                    } else {\r\n                        console.error('Failed to delete the product');\r\n                    }\r\n                })\r\n                .catch(error => console.error('Error deleting product:', error));\r\n        }\r\n    }\r\n\r\n    function handleEdit(product) {\r\n        setSelectedProduct(product);\r\n        setIsEditing(true);  // Switch to editing mode\r\n    }\r\n\r\n    function handleUpdate(id, updatedProduct) {\r\n        fetch(`http://localhost:5006/products/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(updatedProduct),\r\n        })\r\n            .then((response) => response.json())\r\n            .then(() => {\r\n                setIsEditing(false);  // Exit editing mode after update\r\n                props.refreshProducts(); // Refresh product list after update\r\n                alert('Product updated successfully!');\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error updating product:', error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"productReviewBody\">\r\n            {adminProductData.map((prod) => (\r\n                <div className=\"clickProductChart\" key={prod.id}>\r\n                    <AdminCharts\r\n                        imgSrc={prod.thumbnail}\r\n                        title={prod.name}\r\n                        price={prod.price}\r\n                        desc={prod.description}\r\n                        rate={prod.rate}\r\n                        brand={prod.brand}\r\n                        market={prod.compare}\r\n                        category={prod.category}\r\n                        subCategory={prod.subCategory}\r\n                        stock={prod.stock}\r\n                        sales={prod.sales}\r\n                        deleteOnClick={() => deleteData(prod.id, prod.name)}\r\n                        onEdit={() => handleEdit(prod)}\r\n                    />\r\n                </div>\r\n            ))}\r\n\r\n            {/* Render AddProduct form with editing state */}\r\n            {isEditing && (\r\n                <AddProduct\r\n                    selectedProduct={selectedProduct}\r\n                    isEditing={isEditing}\r\n                    onUpdate={handleUpdate}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductReview;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}