{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\QCC\\\\Desktop\\\\FE\\\\Shopin\\\\shopin\\\\src\\\\Components\\\\StarRating.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StarRating({\n  rates\n}) {\n  const fullStars = Math.floor(rates); // Full stars based on whole number part\n  const halfStar = rates % 1 !== 0; // Check if there's a half star\n  const emptyStars = 5 - fullStars - (halfStar ? 1 : 0); // Remaining empty stars\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"star-rating\",\n    children: [[...Array(fullStars)].map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/fullStar.svg\",\n      alt: \"Full Star\",\n      className: \"starRatings\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this)), halfStar && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/halfStar.svg\",\n      alt: \"Half Star\",\n      className: \"starRatings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }, this), [...Array(emptyStars)].map((_, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../images/emptyStar.svg\",\n      alt: \"Empty Star\",\n      className: \"starRatings\"\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = StarRating;\nexport default StarRating;\nvar _c;\n$RefreshReg$(_c, \"StarRating\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StarRating","rates","fullStars","Math","floor","halfStar","emptyStars","className","children","Array","map","_","i","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/QCC/Desktop/FE/Shopin/shopin/src/Components/StarRating.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction StarRating({ rates }) {\r\n    const fullStars = Math.floor(rates); // Full stars based on whole number part\r\n    const halfStar = rates % 1 !== 0;   // Check if there's a half star\r\n    const emptyStars = 5 - fullStars - (halfStar ? 1 : 0); // Remaining empty stars\r\n\r\n    return (\r\n        <div className=\"star-rating\">\r\n            {/* Render full stars */}\r\n            {[...Array(fullStars)].map((_, i) => (\r\n                <img key={i} src=\"../images/fullStar.svg\" alt=\"Full Star\" className='starRatings' />\r\n            ))}\r\n\r\n            {/* Render half star, if applicable */}\r\n            {halfStar && <img src=\"../images/halfStar.svg\" alt=\"Half Star\" className='starRatings' />}\r\n\r\n            {/* Render empty stars */}\r\n            {[...Array(emptyStars)].map((_, i) => (\r\n                <img key={i} src=\"../images/emptyStar.svg\" alt=\"Empty Star\" className='starRatings' />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarRating;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAC3B,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAAC,CAAC;EACrC,MAAMI,QAAQ,GAAGJ,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC,CAAG;EACpC,MAAMK,UAAU,GAAG,CAAC,GAAGJ,SAAS,IAAIG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEvD,oBACIN,OAAA;IAAKQ,SAAS,EAAC,aAAa;IAAAC,QAAA,GAEvB,CAAC,GAAGC,KAAK,CAACP,SAAS,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC5Bb,OAAA;MAAac,GAAG,EAAC,wBAAwB;MAACC,GAAG,EAAC,WAAW;MAACP,SAAS,EAAC;IAAa,GAAvEK,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAwE,CACtF,CAAC,EAGDb,QAAQ,iBAAIN,OAAA;MAAKc,GAAG,EAAC,wBAAwB;MAACC,GAAG,EAAC,WAAW;MAACP,SAAS,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGxF,CAAC,GAAGT,KAAK,CAACH,UAAU,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC7Bb,OAAA;MAAac,GAAG,EAAC,yBAAyB;MAACC,GAAG,EAAC,YAAY;MAACP,SAAS,EAAC;IAAa,GAAzEK,CAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0E,CACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GArBQnB,UAAU;AAuBnB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}