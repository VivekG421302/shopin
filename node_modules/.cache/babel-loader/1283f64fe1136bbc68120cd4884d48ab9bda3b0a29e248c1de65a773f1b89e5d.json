{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\QCC\\\\Desktop\\\\Shopin\\\\shopin\\\\src\\\\Sections\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useOutletContext, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    clear\n  } = useOutletContext();\n  const navigate = useNavigate(); // Hook for navigation\n\n  // State for login form data and errors\n  const [loginData, setLoginData] = useState({\n    loginemail: '',\n    loginpwd: ''\n  });\n  const [loginErrors, setLoginErrors] = useState({});\n  const handleLoginChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleLoginSubmit = async e => {\n    e.preventDefault();\n    const {\n      loginemail,\n      loginpwd\n    } = loginData;\n    let errors = {};\n    try {\n      // Fetch all users from JSON server\n      const response = await fetch('http://localhost:5006/users');\n      const users = await response.json();\n\n      // Check if user exists with the provided email/phone\n      const user = users.find(u => u.email === loginemail || u.phone === loginemail);\n      if (!user) {\n        errors.loginemail = 'Email or phone number not available';\n      } else if (user.password !== loginpwd) {\n        errors.loginpwd = 'Invalid password';\n      }\n      setLoginErrors(errors);\n\n      // If no errors, proceed to login\n      if (Object.keys(errors).length === 0) {\n        console.log('Login successful!', user);\n        clear();\n        navigate('/'); // Redirect to home page on success\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n      setLoginErrors({\n        loginemail: 'Something went wrong. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginFormBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginHeadDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clearFormbtn\",\n        type: \"button\",\n        onClick: clear,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginBodyDiv\",\n      onSubmit: handleLoginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginemail loginformchild\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loginemail\",\n          children: \"Email or Phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"loginemail\",\n          auto: true,\n          value: loginData.loginemail,\n          placeholder: \"Enter Email or Phone Number...\",\n          onChange: handleLoginChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), loginErrors.loginemail && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorstatement\",\n          children: loginErrors.loginemail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginpassword loginformchild\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"loginpwd\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"loginpwd\",\n          value: loginData.loginpwd,\n          placeholder: \"Enter your Password...\",\n          onChange: handleLoginChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), loginErrors.loginpwd && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"errorstatement\",\n          children: loginErrors.loginpwd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerFormBtn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"8V/EgGOTsOe9tbjQTZUc/o4ExP0=\", false, function () {\n  return [useOutletContext, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useOutletContext","useNavigate","jsxDEV","_jsxDEV","Login","_s","clear","navigate","loginData","setLoginData","loginemail","loginpwd","loginErrors","setLoginErrors","handleLoginChange","e","name","value","target","prev","handleLoginSubmit","preventDefault","errors","response","fetch","users","json","user","find","u","email","phone","password","Object","keys","length","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","onSubmit","htmlFor","auto","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/QCC/Desktop/Shopin/shopin/src/Sections/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useOutletContext, useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const { clear } = useOutletContext();\r\n    const navigate = useNavigate(); // Hook for navigation\r\n\r\n    // State for login form data and errors\r\n    const [loginData, setLoginData] = useState({ loginemail: '', loginpwd: '' });\r\n    const [loginErrors, setLoginErrors] = useState({});\r\n\r\n    const handleLoginChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setLoginData((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n\r\n    const handleLoginSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { loginemail, loginpwd } = loginData;\r\n        let errors = {};\r\n\r\n        try {\r\n            // Fetch all users from JSON server\r\n            const response = await fetch('http://localhost:5006/users');\r\n            const users = await response.json();\r\n\r\n            // Check if user exists with the provided email/phone\r\n            const user = users.find(\r\n                (u) => u.email === loginemail || u.phone === loginemail\r\n            );\r\n\r\n            if (!user) {\r\n                errors.loginemail = 'Email or phone number not available';\r\n            } else if (user.password !== loginpwd) {\r\n                errors.loginpwd = 'Invalid password';\r\n            }\r\n\r\n            setLoginErrors(errors);\r\n\r\n            // If no errors, proceed to login\r\n            if (Object.keys(errors).length === 0) {\r\n                console.log('Login successful!', user);\r\n                clear();\r\n                navigate('/'); // Redirect to home page on success\r\n            }\r\n        } catch (error) {\r\n            console.error('Error during login:', error);\r\n            setLoginErrors({ loginemail: 'Something went wrong. Please try again.' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"loginFormBody\">\r\n            <div className=\"loginHeadDiv\">\r\n                <h2>Login</h2>\r\n                <button className=\"clearFormbtn\" type=\"button\" onClick={clear}>\r\n                    X\r\n                </button>\r\n            </div>\r\n\r\n            <form className=\"loginBodyDiv\" onSubmit={handleLoginSubmit}>\r\n                <div className=\"loginemail loginformchild\">\r\n                    <label htmlFor=\"loginemail\">Email or Phone</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"loginemail\"\r\n                        auto\r\n                        value={loginData.loginemail}\r\n                        placeholder=\"Enter Email or Phone Number...\"\r\n                        onChange={handleLoginChange}\r\n                    />\r\n                    {loginErrors.loginemail && (\r\n                        <p className=\"errorstatement\">{loginErrors.loginemail}</p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"loginpassword loginformchild\">\r\n                    <label htmlFor=\"loginpwd\">Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"loginpwd\"\r\n                        value={loginData.loginpwd}\r\n                        placeholder=\"Enter your Password...\"\r\n                        onChange={handleLoginChange}\r\n                    />\r\n                    {loginErrors.loginpwd && (\r\n                        <p className=\"errorstatement\">{loginErrors.loginpwd}</p>\r\n                    )}\r\n                </div>\r\n\r\n                <button className=\"registerFormBtn\" type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}