{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\QCC\\\\Desktop\\\\Shopin\\\\shopin\\\\src\\\\Components\\\\StarRating.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StarRating(props) {\n  const rates = 3.5;\n  const totalStars = 5; // Total number of stars\n\n  // Ensure that rates is within the valid range (0 to totalStars)\n  const validRates = Math.min(Math.max(rates, 0), totalStars);\n\n  // Calculate the number of full stars\n  const fullStars = Math.floor(validRates);\n\n  // Check if there's a half star\n  const hasHalfStar = validRates % 1 !== 0;\n\n  // Calculate how many empty stars (ensure it's non-negative)\n  const emptyStars = Math.max(totalStars - fullStars - (hasHalfStar ? 1 : 0), 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"star-rating\",\n    children: [[...Array(fullStars)].map((_, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/fullStar.svg\",\n      alt: \"full star\",\n      className: \"starRating\"\n    }, `full-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)), hasHalfStar && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/halfStar.svg\",\n      alt: \"half star\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }, this), [...Array(emptyStars)].map((_, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./images/emptyStar.svg\",\n      alt: \"empty star\"\n    }, `empty-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_c = StarRating;\nexport default StarRating;\nvar _c;\n$RefreshReg$(_c, \"StarRating\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StarRating","props","rates","totalStars","validRates","Math","min","max","fullStars","floor","hasHalfStar","emptyStars","className","children","Array","map","_","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/QCC/Desktop/Shopin/shopin/src/Components/StarRating.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction StarRating(props) {\r\n    const rates = 3.5;\r\n    const totalStars = 5; // Total number of stars\r\n\r\n    // Ensure that rates is within the valid range (0 to totalStars)\r\n    const validRates = Math.min(Math.max(rates, 0), totalStars);\r\n\r\n    // Calculate the number of full stars\r\n    const fullStars = Math.floor(validRates);\r\n\r\n    // Check if there's a half star\r\n    const hasHalfStar = validRates % 1 !== 0;\r\n\r\n    // Calculate how many empty stars (ensure it's non-negative)\r\n    const emptyStars = Math.max(totalStars - fullStars - (hasHalfStar ? 1 : 0), 0);\r\n\r\n    return (\r\n        <div className=\"star-rating\">\r\n            {/* Render full stars */}\r\n            {[...Array(fullStars)].map((_, index) => (\r\n                <img key={`full-${index}`} src=\"./images/fullStar.svg\" alt=\"full star\" className='starRating'/>\r\n            ))}\r\n\r\n            {/* Render half star if needed */}\r\n            {hasHalfStar && <img src=\"./images/halfStar.svg\" alt=\"half star\" />}\r\n\r\n            {/* Render empty stars */}\r\n            {[...Array(emptyStars)].map((_, index) => (\r\n                <img key={`empty-${index}`} src=\"./images/emptyStar.svg\" alt=\"empty star\" />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StarRating;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAACC,KAAK,EAAE;EACvB,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,UAAU,GAAG,CAAC,CAAC,CAAC;;EAEtB;EACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACL,KAAK,EAAE,CAAC,CAAC,EAAEC,UAAU,CAAC;;EAE3D;EACA,MAAMK,SAAS,GAAGH,IAAI,CAACI,KAAK,CAACL,UAAU,CAAC;;EAExC;EACA,MAAMM,WAAW,GAAGN,UAAU,GAAG,CAAC,KAAK,CAAC;;EAExC;EACA,MAAMO,UAAU,GAAGN,IAAI,CAACE,GAAG,CAACJ,UAAU,GAAGK,SAAS,IAAIE,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAE9E,oBACIX,OAAA;IAAKa,SAAS,EAAC,aAAa;IAAAC,QAAA,GAEvB,CAAC,GAAGC,KAAK,CAACN,SAAS,CAAC,CAAC,CAACO,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAChClB,OAAA;MAA2BmB,GAAG,EAAC,uBAAuB;MAACC,GAAG,EAAC,WAAW;MAACP,SAAS,EAAC;IAAY,GAAnF,QAAQK,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqE,CACjG,CAAC,EAGDb,WAAW,iBAAIX,OAAA;MAAKmB,GAAG,EAAC,uBAAuB;MAACC,GAAG,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGlE,CAAC,GAAGT,KAAK,CAACH,UAAU,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACjClB,OAAA;MAA4BmB,GAAG,EAAC,wBAAwB;MAACC,GAAG,EAAC;IAAY,GAA/D,SAASF,KAAK,EAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAC9E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACC,EAAA,GAhCQxB,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}